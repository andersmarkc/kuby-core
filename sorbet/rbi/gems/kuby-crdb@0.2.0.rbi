# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `kuby-crdb` gem.
# Please instead update this file by running `bin/tapioca gem kuby-crdb`.

# typed: strong
module Kuby
  class << self
    def define(name, &block); end
    def definition; end
    def dependables; end
    def distros; end
    def env; end
    def env=(env_name); end
    def environment(name = T.unsafe(nil)); end
    def load!(config_file = T.unsafe(nil)); end
    def load_rake_tasks!; end
    def logger; end
    def logger=(_arg0); end
    def packages; end
    def plugins; end
    def providers; end
    def register_dependable(name, version_or_callable); end
    def register_distro(distro_name, distro_klass); end
    def register_package(package_name, package_def = T.unsafe(nil)); end
    def register_plugin(*args, **kwargs); end
    def register_provider(provider_name, provider_klass); end
  end
end

module Kuby::CRDB
  extend ::Kuby::CRDB::Entrypoint
end

class Kuby::CRDB::APIResourcesError < ::Kuby::CRDB::CRDBError; end
class Kuby::CRDB::CRDBError < ::StandardError; end
Kuby::CRDB::CRDB_OPERATOR_VERSION = T.let(T.unsafe(nil), String)
module Kuby::CRDB::DSL; end
module Kuby::CRDB::DSL::CRDB; end
module Kuby::CRDB::DSL::CRDB::V1alpha1; end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbCluster < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_version(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def metadata(*args, &block); end

  sig { returns(T::Boolean) }
  def metadata_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def spec(*args, &block); end

  sig { returns(T::Boolean) }
  def spec_present?; end

  def status(*args, &block); end

  sig { returns(T::Boolean) }
  def status_present?; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterList < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_version(*args); end
  def item(elem_name = T.unsafe(nil), &block); end
  def items; end

  sig { returns(Symbol) }
  def kind_sym; end

  def metadata(*args, &block); end

  sig { returns(T::Boolean) }
  def metadata_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpec < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def additional_annotations(&block); end

  def additional_args(*args); end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def additional_labels(&block); end

  def affinity(*args, &block); end

  sig { returns(T::Boolean) }
  def affinity_present?; end

  def cache(*args); end
  def client_tls_secret(*args); end
  def cockroach_db_version(*args); end
  def data_store(*args, &block); end

  sig { returns(T::Boolean) }
  def data_store_present?; end

  def grpc_port(*args); end
  def http_port(*args); end
  def image(*args, &block); end

  sig { returns(T::Boolean) }
  def image_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def max_sql_memory(*args); end
  def max_unavailable(*args); end
  def min_available(*args); end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def node_selector(&block); end

  def node_tls_secret(*args); end
  def nodes(*args); end
  def pod_env_variable(elem_name = T.unsafe(nil), &block); end
  def pod_env_variables; end
  def resources(*args, &block); end

  sig { returns(T::Boolean) }
  def resources_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def sql_port(*args); end
  def tls_enabled(*args); end
  def toleration(elem_name = T.unsafe(nil), &block); end
  def tolerations; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def node_affinity(*args, &block); end

  sig { returns(T::Boolean) }
  def node_affinity_present?; end

  def pod_affinity(*args, &block); end

  sig { returns(T::Boolean) }
  def pod_affinity_present?; end

  def pod_anti_affinity(*args, &block); end

  sig { returns(T::Boolean) }
  def pod_anti_affinity_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityNodeAffinity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def preferred_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end
  def preferred_during_scheduling_ignored_during_executions; end
  def required_during_scheduling_ignored_during_execution(*args, &block); end

  sig { returns(T::Boolean) }
  def required_during_scheduling_ignored_during_execution_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def preference(*args, &block); end

  sig { returns(T::Boolean) }
  def preference_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def weight(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end
  def match_field(elem_name = T.unsafe(nil), &block); end
  def match_fields; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def node_selector_term(elem_name = T.unsafe(nil), &block); end
  def node_selector_terms; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end
  def match_field(elem_name = T.unsafe(nil), &block); end
  def match_fields; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAffinity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def preferred_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end
  def preferred_during_scheduling_ignored_during_executions; end
  def required_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end
  def required_during_scheduling_ignored_during_executions; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def pod_affinity_term(*args, &block); end

  sig { returns(T::Boolean) }
  def pod_affinity_term_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def weight(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def label_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def label_selector_present?; end

  def namespaces(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def topology_key(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def label_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def label_selector_present?; end

  def namespaces(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def topology_key(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAntiAffinity < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def preferred_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end
  def preferred_during_scheduling_ignored_during_executions; end
  def required_during_scheduling_ignored_during_execution(elem_name = T.unsafe(nil), &block); end
  def required_during_scheduling_ignored_during_executions; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def pod_affinity_term(*args, &block); end

  sig { returns(T::Boolean) }
  def pod_affinity_term_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def weight(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def label_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def label_selector_present?; end

  def namespaces(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def topology_key(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def label_selector(*args, &block); end

  sig { returns(T::Boolean) }
  def label_selector_present?; end

  def namespaces(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def topology_key(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecDataStore < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def host_path(*args, &block); end

  sig { returns(T::Boolean) }
  def host_path_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def pvc(*args, &block); end

  sig { returns(T::Boolean) }
  def pvc_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def supports_auto_resize(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecDataStoreHostPath < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def path(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def type(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecDataStorePvc < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def source(*args, &block); end

  sig { returns(T::Boolean) }
  def source_present?; end

  def spec(*args, &block); end

  sig { returns(T::Boolean) }
  def spec_present?; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecDataStorePvcSource < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def claim_name(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def read_only(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecDataStorePvcSpec < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def access_modes(*args); end
  def data_source(*args, &block); end

  sig { returns(T::Boolean) }
  def data_source_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def resources(*args, &block); end

  sig { returns(T::Boolean) }
  def resources_present?; end

  def selector(*args, &block); end

  sig { returns(T::Boolean) }
  def selector_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def storage_class_name(*args); end
  def volume_mode(*args); end
  def volume_name(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecDataStorePvcSpecDataSource < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_group(*args); end
  def kind(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecDataStorePvcSpecResources < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def limits(&block); end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def requests(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecDataStorePvcSpecSelector < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def match_expression(elem_name = T.unsafe(nil), &block); end
  def match_expressions; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def match_labels(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecDataStorePvcSpecSelectorMatchExpressions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def values(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecImage < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end
  def pull_policy(*args); end
  def pull_secret(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecPodEnvVariables < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def value(*args); end
  def value_from(*args, &block); end

  sig { returns(T::Boolean) }
  def value_from_present?; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecPodEnvVariablesValueFrom < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def config_map_key_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def config_map_key_ref_present?; end

  def field_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def field_ref_present?; end

  sig { returns(Symbol) }
  def kind_sym; end

  def resource_field_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def resource_field_ref_present?; end

  def secret_key_ref(*args, &block); end

  sig { returns(T::Boolean) }
  def secret_key_ref_present?; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecPodEnvVariablesValueFromConfigMapKeyRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end
  def optional(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecPodEnvVariablesValueFromFieldRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def api_version(*args); end
  def field_path(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecPodEnvVariablesValueFromResourceFieldRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def container_name(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def resource(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecPodEnvVariablesValueFromSecretKeyRef < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def name(*args); end
  def optional(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecResources < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def limits(&block); end

  sig { params(block: T.nilable(T.proc.void)).returns(::KubeDSL::KeyValueFields) }
  def requests(&block); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterSpecTolerations < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def effect(*args); end
  def key(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def toleration_seconds(*args); end
  def value(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterStatus < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  def cluster_status(*args); end
  def condition(elem_name = T.unsafe(nil), &block); end
  def conditions; end
  def crdbcontainerimage(*args); end

  sig { returns(Symbol) }
  def kind_sym; end

  def operator_action(elem_name = T.unsafe(nil), &block); end
  def operator_actions; end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def version(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterStatusConditions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def last_transition_time(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def status(*args); end
  def type(*args); end
end

class Kuby::CRDB::DSL::CRDB::V1alpha1::CrdbClusterStatusOperatorActions < ::KubeDSL::DSLObject
  include KubeDSL::ValueFields::InstanceMethods
  extend KubeDSL::ValueFields::ClassMethods
  extend KubeDSL::Validations::ClassMethods

  sig { returns(Symbol) }
  def kind_sym; end

  def last_transition_time(*args); end
  def message(*args); end

  sig do
    returns(T::Hash[Symbol, T.any(String, Integer, Float, T::Boolean, T::Array[T.untyped], T::Hash[Symbol, T.untyped])])
  end
  def serialize; end

  def status(*args); end
  def type(*args); end
end

module Kuby::CRDB::Entrypoint
  def crdb_cluster(&block); end
  def crdb_cluster_list(&block); end
end

class Kuby::CRDB::OperatorDeployError < ::Kuby::CRDB::CRDBError; end

class Kuby::CRDB::Plugin < ::Kuby::Plugin
  def setup; end

  private

  def find_operator_rs(depl); end
  def install_operator; end
  def kubernetes_cli; end
  def operator_deployed?; end
  def operator_deployment; end
  def operator_ready?; end
  def provider; end
  def rs_ready?(rs); end
  def upgrade_operator; end
  def wait_for_api_resources; end
  def wait_for_operator; end
end

Kuby::CRDB::Plugin::CRD_URL = T.let(T.unsafe(nil), String)
Kuby::CRDB::Plugin::NAMESPACE = T.let(T.unsafe(nil), String)
Kuby::CRDB::Plugin::OPERATOR_DEPLOYMENT_NAME = T.let(T.unsafe(nil), String)
Kuby::CRDB::Plugin::OPERATOR_URL = T.let(T.unsafe(nil), String)
Kuby::CRDB::Plugin::REPLICA_SET_MATCH_LABELS = T.let(T.unsafe(nil), Hash)
Kuby::CRDB::Plugin::WAIT_INTERVAL = T.let(T.unsafe(nil), Integer)
Kuby::CRDB::Plugin::WAIT_MAX = T.let(T.unsafe(nil), Integer)
Kuby::CRDB::VERSION = T.let(T.unsafe(nil), String)
Kuby::DEFAULT_DB_PASSWORD = T.let(T.unsafe(nil), String)
Kuby::DEFAULT_DB_USER = T.let(T.unsafe(nil), String)
Kuby::DEFAULT_ENV = T.let(T.unsafe(nil), String)
Kuby::VERSION = T.let(T.unsafe(nil), String)
